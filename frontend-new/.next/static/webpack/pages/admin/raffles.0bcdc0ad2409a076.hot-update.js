"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/admin/raffles",{

/***/ "./src/stores/raffleStore.ts":
/*!***********************************!*\
  !*** ./src/stores/raffleStore.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useRaffleStore: function() { return /* binding */ useRaffleStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ \"./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var _api_rafflesApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/api/rafflesApi */ \"./src/api/rafflesApi.ts\");\n// src/stores/raffleStore.ts\n\n\n/**\r\n * Raffle Store Implementation\r\n * Centralized state management for raffle operations\r\n */ const useRaffleStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)((set, get)=>({\n        // Initial State\n        raffles: [],\n        currentRaffle: null,\n        raffleStats: null,\n        tickets: [],\n        totalTickets: 0,\n        ticketFilters: {},\n        drawResults: [],\n        winners: [],\n        userWins: [],\n        isLoading: false,\n        isLoadingTickets: false,\n        isExecutingDraw: false,\n        error: null,\n        ticketError: null,\n        drawError: null,\n        // Collection Actions\n        loadRaffles: async ()=>{\n            try {\n                set({\n                    isLoading: true,\n                    error: null\n                });\n                const raffles = await _api_rafflesApi__WEBPACK_IMPORTED_MODULE_0__.rafflesApi.getRaffles();\n                set({\n                    raffles,\n                    isLoading: false\n                });\n            } catch (error) {\n                set({\n                    error: error instanceof Error ? error.message : \"Failed to load raffles\",\n                    isLoading: false\n                });\n            }\n        },\n        updateRaffleStatus: async (id, payload)=>{\n            try {\n                set({\n                    isLoading: true,\n                    error: null\n                });\n                const raffle = await _api_rafflesApi__WEBPACK_IMPORTED_MODULE_0__.rafflesApi.updateStatus(id, payload);\n                set((state)=>{\n                    var _state_currentRaffle;\n                    return {\n                        raffles: state.raffles.map((r)=>r.id === id ? raffle : r),\n                        currentRaffle: ((_state_currentRaffle = state.currentRaffle) === null || _state_currentRaffle === void 0 ? void 0 : _state_currentRaffle.id) === id ? raffle : state.currentRaffle,\n                        isLoading: false\n                    };\n                });\n            } catch (error) {\n                set({\n                    error: error instanceof Error ? error.message : \"Failed to update status\",\n                    isLoading: false\n                });\n                throw error;\n            }\n        },\n        updateRaffleState: async (id, payload)=>{\n            try {\n                set({\n                    isLoading: true,\n                    error: null\n                });\n                const raffle = await _api_rafflesApi__WEBPACK_IMPORTED_MODULE_0__.rafflesApi.updateState(id, payload);\n                set((state)=>{\n                    var _state_currentRaffle;\n                    return {\n                        raffles: state.raffles.map((r)=>r.id === id ? raffle : r),\n                        currentRaffle: ((_state_currentRaffle = state.currentRaffle) === null || _state_currentRaffle === void 0 ? void 0 : _state_currentRaffle.id) === id ? raffle : state.currentRaffle,\n                        isLoading: false\n                    };\n                });\n            } catch (error) {\n                set({\n                    error: error instanceof Error ? error.message : \"Failed to update state\",\n                    isLoading: false\n                });\n                throw error;\n            }\n        },\n        loadPublicRaffles: async ()=>{\n            try {\n                set({\n                    isLoading: true,\n                    error: null\n                });\n                const response = await _api_rafflesApi__WEBPACK_IMPORTED_MODULE_0__.rafflesApi.getPublicRaffles();\n                set({\n                    raffles: response,\n                    isLoading: false\n                });\n            } catch (error) {\n                set({\n                    error: error instanceof Error ? error.message : \"Failed to load public raffles\",\n                    isLoading: false\n                });\n            }\n        },\n        // Single Raffle Actions\n        loadRaffle: async (id)=>{\n            try {\n                set({\n                    isLoading: true,\n                    error: null\n                });\n                const raffle = await _api_rafflesApi__WEBPACK_IMPORTED_MODULE_0__.rafflesApi.getRaffle(id);\n                set({\n                    currentRaffle: raffle,\n                    isLoading: false\n                });\n            } catch (error) {\n                set({\n                    error: error instanceof Error ? error.message : \"Failed to load raffle\",\n                    isLoading: false\n                });\n            }\n        },\n        loadStats: async (raffleId)=>{\n            try {\n                set({\n                    isLoading: true,\n                    error: null\n                });\n                const response = await _api_rafflesApi__WEBPACK_IMPORTED_MODULE_0__.rafflesApi.getRaffleStats(raffleId);\n                // Type guard to ensure response has required properties\n                const isValidResponse = (resp)=>{\n                    return resp && typeof resp.total_tickets === \"number\" && typeof resp.available_tickets === \"number\" && typeof resp.sold_tickets === \"number\" && typeof resp.revealed_tickets === \"number\" && typeof resp.eligible_tickets === \"number\" && typeof resp.instant_wins_discovered === \"number\" && typeof resp.unique_participants === \"number\";\n                };\n                if (!isValidResponse(response)) {\n                    throw new Error(\"Invalid stats response format\");\n                }\n                var _response_eligible_tickets;\n                // Calculate eligible_tickets if not provided by API\n                const stats = {\n                    ...response,\n                    eligible_tickets: (_response_eligible_tickets = response.eligible_tickets) !== null && _response_eligible_tickets !== void 0 ? _response_eligible_tickets : response.sold_tickets - response.revealed_tickets\n                };\n                set({\n                    raffleStats: stats,\n                    isLoading: false\n                });\n            } catch (error) {\n                set({\n                    error: error instanceof Error ? error.message : \"Failed to load raffle stats\",\n                    isLoading: false\n                });\n            }\n        },\n        // Ticket Actions\n        loadTickets: async (raffleId)=>{\n            try {\n                set({\n                    isLoadingTickets: true,\n                    ticketError: null\n                });\n                const response = await _api_rafflesApi__WEBPACK_IMPORTED_MODULE_0__.rafflesApi.getRaffleTickets(raffleId, get().ticketFilters);\n                set({\n                    tickets: response.tickets,\n                    totalTickets: response.total,\n                    isLoadingTickets: false\n                });\n            } catch (error) {\n                set({\n                    ticketError: error instanceof Error ? error.message : \"Failed to load tickets\",\n                    isLoadingTickets: false\n                });\n            }\n        },\n        updateTicketFilters: (filters)=>{\n            set({\n                ticketFilters: filters\n            });\n        },\n        createRaffle: async (payload)=>{\n            try {\n                set({\n                    isLoading: true,\n                    error: null\n                });\n                const raffle = await _api_rafflesApi__WEBPACK_IMPORTED_MODULE_0__.rafflesApi.createRaffle(payload);\n                set((state)=>({\n                        raffles: [\n                            ...state.raffles,\n                            raffle\n                        ],\n                        currentRaffle: raffle,\n                        isLoading: false\n                    }));\n            } catch (error) {\n                set({\n                    error: error instanceof Error ? error.message : \"Failed to create raffle\",\n                    isLoading: false\n                });\n                throw error;\n            }\n        },\n        updateRaffle: async (id, payload)=>{\n            try {\n                set({\n                    isLoading: true,\n                    error: null\n                });\n                const raffle = await _api_rafflesApi__WEBPACK_IMPORTED_MODULE_0__.rafflesApi.updateRaffle(id, payload);\n                set((state)=>{\n                    var _state_currentRaffle;\n                    return {\n                        raffles: state.raffles.map((r)=>r.id === id ? raffle : r),\n                        currentRaffle: ((_state_currentRaffle = state.currentRaffle) === null || _state_currentRaffle === void 0 ? void 0 : _state_currentRaffle.id) === id ? raffle : state.currentRaffle,\n                        isLoading: false\n                    };\n                });\n            } catch (error) {\n                set({\n                    error: error instanceof Error ? error.message : \"Failed to update raffle\",\n                    isLoading: false\n                });\n                throw error;\n            }\n        },\n        // Draw Actions\n        executeDraw: async (raffleId)=>{\n            try {\n                set({\n                    isExecutingDraw: true,\n                    drawError: null\n                });\n                const response = await _api_rafflesApi__WEBPACK_IMPORTED_MODULE_0__.rafflesApi.executeDraw(raffleId);\n                set({\n                    drawResults: response.draws,\n                    isExecutingDraw: false\n                });\n                // Refresh winners after draw\n                await get().loadWinners(raffleId);\n            } catch (error) {\n                set({\n                    drawError: error instanceof Error ? error.message : \"Failed to execute draw\",\n                    isExecutingDraw: false\n                });\n                throw error;\n            }\n        },\n        loadDrawResults: async (raffleId)=>{\n            try {\n                const response = await _api_rafflesApi__WEBPACK_IMPORTED_MODULE_0__.rafflesApi.getDrawResults(raffleId);\n                set({\n                    drawResults: response.draws\n                });\n            } catch (error) {\n                set({\n                    drawError: error instanceof Error ? error.message : \"Failed to load draw results\"\n                });\n            }\n        },\n        loadWinners: async (raffleId)=>{\n            try {\n                const response = await _api_rafflesApi__WEBPACK_IMPORTED_MODULE_0__.rafflesApi.getRaffleWinners(raffleId);\n                set({\n                    winners: response\n                });\n            } catch (error) {\n                set({\n                    error: error instanceof Error ? error.message : \"Failed to load winners\"\n                });\n            }\n        },\n        loadUserWins: async ()=>{\n            try {\n                const response = await _api_rafflesApi__WEBPACK_IMPORTED_MODULE_0__.rafflesApi.getUserWins();\n                set({\n                    userWins: response\n                });\n            } catch (error) {\n                set({\n                    error: error instanceof Error ? error.message : \"Failed to load user wins\"\n                });\n            }\n        },\n        // Utility Actions\n        clearError: ()=>set({\n                error: null,\n                drawError: null,\n                ticketError: null\n            })\n    }));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/stores/raffleStore.ts\n"));

/***/ })

});
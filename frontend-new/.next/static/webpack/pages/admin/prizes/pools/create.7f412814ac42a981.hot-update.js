"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/admin/prizes/pools/create",{

/***/ "./src/api/poolsApi.ts":
/*!*****************************!*\
  !*** ./src/api/poolsApi.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   poolsApi: function() { return /* binding */ poolsApi; }\n/* harmony export */ });\n/* harmony import */ var _lib_api_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/api-client */ \"./src/lib/api-client.ts\");\n// src/api/poolsApi.ts\n\n/**\r\n * API Route Configuration\r\n * Mirrors Flask blueprint structure\r\n */ const ROUTES = {\n    admin: {\n        base: \"/api/prizes/pools\",\n        pool: (id)=>\"/api/admin/prizes/pools/\".concat(id),\n        allocate: (id)=>\"/api/admin/prizes/pools/\".concat(id, \"/allocate\"),\n        lock: (id)=>\"/api/admin/prizes/pools/\".concat(id, \"/lock\")\n    },\n    public: {\n        base: \"/api/admin/prizes/pools\",\n        pool: (id)=>\"/api/prizes/pools/\".concat(id)\n    }\n};\n/**\r\n * Prize Pool API Service\r\n * Implements comprehensive pool management functionality\r\n */ const poolsApi = {\n    /**\r\n   * Administrative Operations\r\n   */ async listPools () {\n        try {\n            const response = await _lib_api_client__WEBPACK_IMPORTED_MODULE_0__.api.get(ROUTES.admin.base);\n            return response.pools;\n        } catch (error) {\n            var _axiosError_response;\n            const axiosError = error;\n            if (((_axiosError_response = axiosError.response) === null || _axiosError_response === void 0 ? void 0 : _axiosError_response.status) === 405) {\n                throw new Error(\"Operation not allowed. Please check your permissions.\");\n            }\n            throw new Error(axiosError.message || \"Failed to fetch pools\");\n        }\n    },\n    async getPool (id) {\n        try {\n            const response = await _lib_api_client__WEBPACK_IMPORTED_MODULE_0__.api.get(ROUTES.admin.pool(id));\n            return response;\n        } catch (error) {\n            var _axiosError_response;\n            const axiosError = error;\n            if (((_axiosError_response = axiosError.response) === null || _axiosError_response === void 0 ? void 0 : _axiosError_response.status) === 404) {\n                throw new Error(\"Pool not found\");\n            }\n            throw new Error(axiosError.message || \"Failed to fetch pool\");\n        }\n    },\n    async createPool (data) {\n        try {\n            const response = await _lib_api_client__WEBPACK_IMPORTED_MODULE_0__.api.post(ROUTES.admin.base, data);\n            return response;\n        } catch (error) {\n            var _axiosError_response;\n            const axiosError = error;\n            if (((_axiosError_response = axiosError.response) === null || _axiosError_response === void 0 ? void 0 : _axiosError_response.status) === 409) {\n                throw new Error(\"Pool with name '\".concat(data.name, \"' already exists\"));\n            }\n            throw new Error(axiosError.message || \"Failed to create pool\");\n        }\n    },\n    async lockPool (poolId) {\n        try {\n            const response = await _lib_api_client__WEBPACK_IMPORTED_MODULE_0__.api.put(ROUTES.admin.lock(poolId));\n            return response;\n        } catch (error) {\n            var _axiosError_response;\n            const axiosError = error;\n            if (((_axiosError_response = axiosError.response) === null || _axiosError_response === void 0 ? void 0 : _axiosError_response.status) === 400) {\n                throw new Error(\"Pool cannot be locked. Please check requirements.\");\n            }\n            throw new Error(axiosError.message || \"Failed to lock pool\");\n        }\n    },\n    async allocateTemplate (poolId, allocation) {\n        try {\n            const response = await _lib_api_client__WEBPACK_IMPORTED_MODULE_0__.api.post(ROUTES.admin.allocate(poolId), allocation);\n            return response;\n        } catch (error) {\n            var _axiosError_response;\n            const axiosError = error;\n            if (((_axiosError_response = axiosError.response) === null || _axiosError_response === void 0 ? void 0 : _axiosError_response.status) === 400) {\n                throw new Error(\"Invalid allocation parameters. Please check requirements.\");\n            }\n            throw new Error(axiosError.message || \"Failed to allocate template\");\n        }\n    },\n    /**\r\n   * Public Operations\r\n   */ async listPublicPools () {\n        try {\n            const response = await _lib_api_client__WEBPACK_IMPORTED_MODULE_0__.api.get(ROUTES.public.base);\n            return response.pools;\n        } catch (error) {\n            throw new Error(error.message || \"Failed to fetch public pools\");\n        }\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/api/poolsApi.ts\n"));

/***/ })

});
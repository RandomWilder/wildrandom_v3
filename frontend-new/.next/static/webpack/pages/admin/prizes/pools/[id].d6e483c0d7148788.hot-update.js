"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/admin/prizes/pools/[id]",{

/***/ "./src/stores/poolStore.ts":
/*!*********************************!*\
  !*** ./src/stores/poolStore.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   usePoolStore: function() { return /* binding */ usePoolStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ \"./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var _api_poolsApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/api/poolsApi */ \"./src/api/poolsApi.ts\");\n// src/stores/poolStore.ts\n\n\nconst usePoolStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)((set, get)=>({\n        // Initial State\n        pools: [],\n        activePool: null,\n        instances: [],\n        instancesSummary: null,\n        isLoading: false,\n        isLoadingInstances: false,\n        error: null,\n        fetchPools: async ()=>{\n            set({\n                isLoading: true,\n                error: null\n            });\n            try {\n                const pools = await _api_poolsApi__WEBPACK_IMPORTED_MODULE_0__.poolsApi.listPools();\n                set({\n                    pools,\n                    isLoading: false\n                });\n            } catch (error) {\n                set({\n                    error: error instanceof Error ? error.message : \"Failed to fetch pools\",\n                    isLoading: false\n                });\n                throw error;\n            }\n        },\n        getPool: async (id)=>{\n            set({\n                isLoading: true,\n                error: null\n            });\n            try {\n                const pool = await _api_poolsApi__WEBPACK_IMPORTED_MODULE_0__.poolsApi.getPool(id);\n                set({\n                    activePool: pool,\n                    isLoading: false\n                });\n            } catch (error) {\n                set({\n                    error: error instanceof Error ? error.message : \"Failed to fetch pool\",\n                    isLoading: false\n                });\n                throw error;\n            }\n        },\n        createPool: async (data)=>{\n            set({\n                isLoading: true,\n                error: null\n            });\n            try {\n                const pool = await _api_poolsApi__WEBPACK_IMPORTED_MODULE_0__.poolsApi.createPool(data);\n                set((state)=>({\n                        pools: [\n                            ...state.pools,\n                            pool\n                        ],\n                        isLoading: false\n                    }));\n            } catch (error) {\n                const errorMessage = error instanceof Error ? error.message : \"Failed to create pool\";\n                set({\n                    error: errorMessage,\n                    isLoading: false\n                });\n                throw error;\n            }\n        },\n        lockPool: async (poolId)=>{\n            set({\n                isLoading: true,\n                error: null\n            });\n            try {\n                const updatedPool = await _api_poolsApi__WEBPACK_IMPORTED_MODULE_0__.poolsApi.lockPool(poolId);\n                set((state)=>{\n                    var _state_activePool;\n                    return {\n                        pools: state.pools.map((pool)=>pool.id === poolId ? updatedPool : pool),\n                        activePool: ((_state_activePool = state.activePool) === null || _state_activePool === void 0 ? void 0 : _state_activePool.id) === poolId ? updatedPool : state.activePool,\n                        isLoading: false\n                    };\n                });\n            } catch (error) {\n                const errorMessage = error instanceof Error ? error.message : \"Failed to lock pool\";\n                set({\n                    error: errorMessage,\n                    isLoading: false\n                });\n                throw error;\n            }\n        },\n        allocateTemplate: async (poolId, allocation)=>{\n            set({\n                isLoading: true,\n                error: null\n            });\n            try {\n                const response = await _api_poolsApi__WEBPACK_IMPORTED_MODULE_0__.poolsApi.allocateTemplate(poolId, allocation);\n                // Refresh pool data to get updated state\n                const updatedPool = await _api_poolsApi__WEBPACK_IMPORTED_MODULE_0__.poolsApi.getPool(poolId);\n                set((state)=>({\n                        pools: state.pools.map((pool)=>pool.id === poolId ? updatedPool : pool),\n                        activePool: updatedPool,\n                        isLoading: false\n                    }));\n                return response;\n            } catch (error) {\n                const errorMessage = error instanceof Error ? error.message : \"Failed to allocate template\";\n                set({\n                    error: errorMessage,\n                    isLoading: false\n                });\n                throw error;\n            }\n        },\n        fetchInstances: async (poolId)=>{\n            set({\n                isLoadingInstances: true\n            });\n            try {\n                const response = await _api_poolsApi__WEBPACK_IMPORTED_MODULE_0__.poolsApi.getPoolInstances(poolId);\n                set({\n                    instances: response.instances,\n                    instancesSummary: response.summary,\n                    isLoadingInstances: false\n                });\n            } catch (error) {\n                set({\n                    error: error instanceof Error ? error.message : \"Failed to fetch instances\",\n                    isLoadingInstances: false\n                });\n                throw error;\n            }\n        },\n        clearError: ()=>set({\n                error: null\n            })\n    }));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/stores/poolStore.ts\n"));

/***/ })

});